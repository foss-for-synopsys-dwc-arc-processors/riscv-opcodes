# yaml-language-server: $schema=../../../schemas/inst_schema.json

addi:
  long_name: Add Immediate
  description: |
      Adds the 12-bit sign-extended immediate to rs1 and writes the result
    to rd. This is one of the most frequently used instructions in RISC-V, serving
    multiple purposes. It's used for basic arithmetic with small constants, for adjusting
    pointers (e.g., accessing structure fields or array elements), and for loading
    small signed constants into registers. In RV64, it sign-extends the result to
    64 bits. ADDI with a zero immediate is used to move values between registers.
    It's also key in implementing higher-level language constructs like local variable
    allocation on the stack.
  definedBy: [I]
  assembly: xd, xs1, imm
  encoding:
    match: -----------------000-----0010011
    variables:
    - name: imm12
      location: 31-20
      start-bit: 31
      end_bit: 20
    - name: rs1
      location: 19-15
      start-bit: 19
      end_bit: 15
    - name: rd
      location: 11-7
      start-bit: 11
      end_bit: 7
  access:
    s: ''
    u: ''
    vs: ''
    vu: ''
  operation(): |
      
