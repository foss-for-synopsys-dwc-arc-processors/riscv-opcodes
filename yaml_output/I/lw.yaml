# yaml-language-server: $schema=../../../schemas/inst_schema.json

lw:
  long_name: Load signed Word from memory
  description: |
      Loads a 32-bit value from memory and writes it to rd. In RV64, the
    loaded value is sign-extended to 64 bits. The effective address is obtained by
    adding register rs1 to the sign-extended 12-bit offset. This is the primary instruction
    for loading 32-bit integers, single-precision floating-point values (when used
    by the F extension), and memory addresses in RV32. In RV64, it's still widely
    used for compatibility with 32-bit data and for accessing the lower half of 64-bit
    values. LW is fundamental in most memory operations, including array access, structure
    field access, and loading global variables.
  definedBy: [I]
  assembly: xd, xs1, imm
  encoding:
    match: -----------------010-----0000011
    variables:
    - name: imm12
      location: 31-20
      start-bit: 31
      end_bit: 20
    - name: rs1
      location: 19-15
      start-bit: 19
      end_bit: 15
    - name: rd
      location: 11-7
      start-bit: 11
      end_bit: 7
  access:
    s: ''
    u: ''
    vs: ''
    vu: ''
  operation(): |
      
