# yaml-language-server: $schema=../../../schemas/inst_schema.json

lw:
  long_name: Load signed Word from memory
  description: Loads a 32-bit value from memory and writes it to rd. In RV64, the
    loaded value is sign-extended to 64 bits. The effective address is obtained by
    adding register rs1 to the sign-extended 12-bit offset. This is the primary instruction
    for loading 32-bit integers, single-precision floating-point values (when used
    by the F extension), and memory addresses in RV32. In RV64, it's still widely
    used for compatibility with 32-bit data and for accessing the lower half of 64-bit
    values. LW is fundamental in most memory operations, including array access, structure
    field access, and loading global variables.
  definedBy: I
  assembly: lw xd, xs1, imm
  encoding:
    match: '-----------------010-----0000011'
    variables:
    - name: rd
      location: 7-11
    - name: rs1
      location: 15-19
    - name: imm12
      location: 20-31
  access:
    s: TODO
    u: TODO
    vs: TODO
    vu: TODO
  operation(): TODO
