# yaml-language-server: $schema=../../../schemas/inst_schema.json

sll:
  long_name: Shift Left Logical
  description: Shifts rs1 left by the amount specified in the lower 5 (RV32) or 6
    (RV64) bits of rs2, writing the result to rd. Left shifts are equivalent to multiplication
    by powers of 2, making SLL useful for efficient multiplication by constants. It's
    also crucial in various bit manipulation techniques, such as creating masks or
    extracting bitfields. In graphics and cryptography, SLL is often used for fast
    multiplication or for implementing certain algorithms. The instruction can also
    be used for aligning data to specific byte boundaries.
  definedBy: I
  assembly: sll xd, xs1, xs2
  encoding:
    match: 0000000----------001-----0110011
    variables:
    - name: rd
      location: 7-11
    - name: rs1
      location: 15-19
    - name: rs2
      location: 20-24
  access:
    s: TODO
    u: TODO
    vs: TODO
    vu: TODO
  operation(): TODO
