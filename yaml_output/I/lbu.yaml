# yaml-language-server: $schema=../../../schemas/inst_schema.json

lbu:
  long_name: Load unsigned Byte from memory
  description: Loads an 8-bit value from memory, zero-extends it to XLEN bits, and
    writes it to rd. The effective address is obtained by adding register rs1 to the
    sign-extended 12-bit offset. This instruction is used for loading unsigned byte
    values, ensuring that the upper bits are always zero. It's particularly useful
    when working with unsigned char types in C, or when processing binary data where
    the high bits should not be interpreted as a sign. LBU is often used in network
    protocol implementations, file I/O operations, and when working with binary file
    formats.
  definedBy: I
  assembly: lbu xd, xs1, imm
  encoding:
    match: '-----------------100-----0000011'
    variables:
    - name: rd
      location: 7-11
    - name: rs1
      location: 15-19
    - name: imm12
      location: 20-31
  access:
    s: TODO
    u: TODO
    vs: TODO
    vu: TODO
  operation(): TODO
